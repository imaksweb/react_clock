{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","name","props","className","Component","App","clockName","hasClock","rightClickHandler","e","preventDefault","leftClickHandler","value","now","toString","getRandomName","document","addEventListener","_prevProps","prevState","prevName","currentName","debug","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,YAAa,IAAIC,MAFrB,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAc,IAAIC,KAExB,EAAKK,SAAS,CAAEN,gBAGhBO,QAAQC,KAAKR,EAAYS,cAAcC,OAAO,IAAK,MAClD,OAfP,kCAkBE,WACEN,OAAOO,cAAcR,KAAKD,WAnB9B,oBAsBE,WACE,IAAQF,EAAgBG,KAAKJ,MAArBC,YACAY,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAYS,cAAcC,OAAO,IAAK,YAnCjD,GAA2BK,aCKpB,IAAMC,EAAb,4MACEjB,MAAyB,CACvBkB,UAAW,UACXC,UAAU,GAHd,EAMEhB,QAAU,EANZ,EA6BEiB,kBAAoB,SAACC,GACnBA,EAAEC,iBAEF,EAAKf,SAAS,CAAEY,UAAU,KAhC9B,EAmCEI,iBAAmB,WACjB,EAAKhB,SAAS,CAAEY,UAAU,KApC9B,uDAQE,WAAqB,IAAD,OAClBf,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMY,EAhBZ,WACE,IAAMM,EAAQtB,KAAKuB,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,GAaMG,GAElB,EAAKpB,SAAS,CAAEW,gBACf,MAEHU,SAASC,iBAAiB,cAAezB,KAAKgB,mBAC9CQ,SAASC,iBAAiB,QAASzB,KAAKmB,oBAhB5C,gCAmBE,SAAmBO,EAAgBC,GACjC,IAAmBC,EAAaD,EAAxBb,UACWe,EAAgB7B,KAAKJ,MAAhCkB,UAEJc,IAAaC,GAAe7B,KAAKJ,MAAMmB,UAEzCX,QAAQ0B,MAAR,uBAA8BF,EAA9B,eAA6CC,MAzBnD,oBAuCE,WACE,MAAgC7B,KAAKJ,MAA7BkB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCI,EACG,cAAC,EAAD,CAAON,KAAMK,IACb,YA/CZ,GAAyBF,aCZzBmB,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.6b81077c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string\n};\n\ntype State = {\n  currentTime: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    currentTime: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const currentTime = new Date();\n\n      this.setState({ currentTime });\n\n      // eslint-disable-next-line no-console\n      console.info(currentTime.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { currentTime } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const clockName = getRandomName();\n\n      this.setState({ clockName });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.rightClickHandler);\n    document.addEventListener('click', this.leftClickHandler);\n  }\n\n  componentDidUpdate(_prevProps: {}, prevState: State) {\n    const { clockName: prevName } = prevState;\n    const { clockName: currentName } = this.state;\n\n    if (prevName !== currentName && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${currentName}`);\n    }\n  }\n\n  rightClickHandler = (e: Event) => {\n    e.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  leftClickHandler = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock\n          ? <Clock name={clockName} />\n          : null}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}